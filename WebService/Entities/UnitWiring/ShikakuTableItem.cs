//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3643
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocketPlan.WebService
{
    using System;
    using System.Collections.Generic;
    using Edsa.Data;
    using Edsa.Data.Attributes;
    
    
    [Serializable()]
    [DbTable(Name="ShikakuTableItems", DatabaseType=DatabaseType.SqlServer, ConnectionSettingKeyName="SocketPlan.WebService.Properties.Settings.ConnectionString")]
    public partial class ShikakuTableItem : DataEntity<ShikakuTableItem>
    {
        
        // 画面のコントロール名とリンクさせています。要注意。
        private int _Id;
        
        // 項目名
        private string _Name;
        
        // 1：チェックボックス、2：コンボボックス、3：テキストボックス。プログラムでは特に使わない
        private int _EntryTypeId;
        
        // コンボボックスの項目リスト。項目をセミコロンで区切って記述する
        private string _ComboItems;
        
        // 挿入する図面の座標X
        private decimal _PointX;
        
        // 挿入する図面の座標Y
        private decimal _PointY;
        
        // この幅内に収まるよう、文字を圧縮する
        private System.Nullable<decimal> _Width;
        
        // 更新日時
        private System.DateTime _UpdatedDateTime;
        
        [DbColumn(Name="Id", TypeName="int", IsPrimaryKey=true, Length=4, Remarks="画面のコントロール名とリンクさせています。要注意。")]
        public virtual int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                this._Id = value;
            }
        }
        
        [DbColumn(Name="Name", TypeName="varchar", Length=50, Remarks="項目名")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this._Name = value;
            }
        }
        
        [DbColumn(Name="EntryTypeId", TypeName="int", Length=4, Remarks="1：チェックボックス、2：コンボボックス、3：テキストボックス。プログラムでは特に使わない")]
        public virtual int EntryTypeId
        {
            get
            {
                return this._EntryTypeId;
            }
            set
            {
                this._EntryTypeId = value;
            }
        }
        
        [DbColumn(Name="ComboItems", TypeName="varchar", Length=500, Remarks="コンボボックスの項目リスト。項目をセミコロンで区切って記述する")]
        public virtual string ComboItems
        {
            get
            {
                return this._ComboItems;
            }
            set
            {
                this._ComboItems = value;
            }
        }
        
        [DbColumn(Name="PointX", TypeName="decimal", DecimalPlace=4, Length=9, Remarks="挿入する図面の座標X")]
        public virtual decimal PointX
        {
            get
            {
                return this._PointX;
            }
            set
            {
                this._PointX = value;
            }
        }
        
        [DbColumn(Name="PointY", TypeName="decimal", DecimalPlace=4, Length=9, Remarks="挿入する図面の座標Y")]
        public virtual decimal PointY
        {
            get
            {
                return this._PointY;
            }
            set
            {
                this._PointY = value;
            }
        }
        
        [DbColumn(Name="Width", TypeName="decimal", Nullable=true, Length=9, Remarks="この幅内に収まるよう、文字を圧縮する")]
        public virtual System.Nullable<decimal> Width
        {
            get
            {
                return this._Width;
            }
            set
            {
                this._Width = value;
            }
        }
        
        [DbColumn(Name="UpdatedDateTime", TypeName="datetime", DecimalPlace=3, Length=8, Remarks="更新日時")]
        public virtual System.DateTime UpdatedDateTime
        {
            get
            {
                return this._UpdatedDateTime;
            }
            set
            {
                this._UpdatedDateTime = value;
            }
        }
        
        public static ShikakuTableItem Get(int _Id)
        {
            ShikakuTableItem entity = new ShikakuTableItem();
            entity.Id = _Id;
            if (!entity.Fill())
            {
                return null;
            }
            return entity;
        }
    }
}
