//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:2.0.50727.3643
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocketPlan.WebService
{
    using System;
    using System.Collections.Generic;
    using Edsa.Data;
    using Edsa.Data.Attributes;
    
    
    [Serializable()]
    [DbTable(Name="LayoutTexts", DatabaseType=DatabaseType.SqlServer, ConnectionSettingKeyName="SocketPlan.WebService.Properties.Settings.ConnectionString")]
    public partial class LayoutText : DataEntity<LayoutText>
    {
        
        // 挿入する図面
        private int _LayoutId;
        
        // 同じ意味の列には同じTypeIdを振ってやってください
        private int _TypeId;
        
        // 名前
        private string _Name;
        
        // 挿入する座標X
        private decimal _PointX;
        
        // 挿入する座標Y
        private decimal _PointY;
        
        // 図面の枠幅。はみ出し対策。
        private decimal _MaxWidth;
        
        // テ期すとのフォントサイズ
        private decimal _FontSize;
        
        // AutoCADの位置合わせ文字
        //0	左寄せ（規定値）
        //1	中心（C）
        //2	右寄せ（R）
        //3	両端揃え（A）
        //4	中央（M）
        //5	フィット（F）
        //6	左上（TL）
        //7	上中心（TC）
        //8	右上（TR）
        //9	左中央（ML）
        //10	中央（MC）
        //11	右中央（MR）
        //12	左下（BL）
        //13	下中心（BC）
        //14	右下（BR）
        private int _Align;
        
        // このクエリ結果を図面に書き込む
        private int _QueryId;
        
        // 更新日時
        private System.DateTime _UpdatedDateTime;
        
        [DbColumn(Name="LayoutId", TypeName="int", IsPrimaryKey=true, Length=4, Remarks="挿入する図面")]
        public virtual int LayoutId
        {
            get
            {
                return this._LayoutId;
            }
            set
            {
                this._LayoutId = value;
            }
        }
        
        [DbColumn(Name="TypeId", TypeName="int", IsPrimaryKey=true, Length=4, Remarks="同じ意味の列には同じTypeIdを振ってやってください")]
        public virtual int TypeId
        {
            get
            {
                return this._TypeId;
            }
            set
            {
                this._TypeId = value;
            }
        }
        
        [DbColumn(Name="Name", TypeName="varchar", Length=50, Remarks="名前")]
        public virtual string Name
        {
            get
            {
                return this._Name;
            }
            set
            {
                this._Name = value;
            }
        }
        
        [DbColumn(Name="PointX", TypeName="decimal", DecimalPlace=2, Length=9, Remarks="挿入する座標X")]
        public virtual decimal PointX
        {
            get
            {
                return this._PointX;
            }
            set
            {
                this._PointX = value;
            }
        }
        
        [DbColumn(Name="PointY", TypeName="decimal", DecimalPlace=2, Length=9, Remarks="挿入する座標Y")]
        public virtual decimal PointY
        {
            get
            {
                return this._PointY;
            }
            set
            {
                this._PointY = value;
            }
        }
        
        [DbColumn(Name="MaxWidth", TypeName="decimal", Length=9, Remarks="図面の枠幅。はみ出し対策。")]
        public virtual decimal MaxWidth
        {
            get
            {
                return this._MaxWidth;
            }
            set
            {
                this._MaxWidth = value;
            }
        }
        
        [DbColumn(Name="FontSize", TypeName="decimal", DecimalPlace=2, Length=9, Remarks="テ期すとのフォントサイズ")]
        public virtual decimal FontSize
        {
            get
            {
                return this._FontSize;
            }
            set
            {
                this._FontSize = value;
            }
        }
        
        [DbColumn(Name="Align", TypeName="int", Length=4, Remarks="AutoCADの位置合わせ文字\r\n0\t左寄せ（規定値）\r\n1\t中心（C）\r\n2\t右寄せ（R）\r\n3\t両端揃え（A）\r\n4\t中央（M）\r\n5\tフィット（F）\r\n6\t" +
            "左上（TL）\r\n7\t上中心（TC）\r\n8\t右上（TR）\r\n9\t左中央（ML）\r\n10\t中央（MC）\r\n11\t右中央（MR）\r\n12\t左下（BL）\r\n13\t下中心" +
            "（BC）\r\n14\t右下（BR）")]
        public virtual int Align
        {
            get
            {
                return this._Align;
            }
            set
            {
                this._Align = value;
            }
        }
        
        [DbColumn(Name="QueryId", TypeName="int", Length=4, Remarks="このクエリ結果を図面に書き込む")]
        public virtual int QueryId
        {
            get
            {
                return this._QueryId;
            }
            set
            {
                this._QueryId = value;
            }
        }
        
        [DbColumn(Name="UpdatedDateTime", TypeName="datetime", DecimalPlace=3, Length=8, Remarks="更新日時")]
        public virtual System.DateTime UpdatedDateTime
        {
            get
            {
                return this._UpdatedDateTime;
            }
            set
            {
                this._UpdatedDateTime = value;
            }
        }
        
        public static LayoutText Get(int _LayoutId, int _TypeId)
        {
            LayoutText entity = new LayoutText();
            entity.LayoutId = _LayoutId;
            entity.TypeId = _TypeId;
            if (!entity.Fill())
            {
                return null;
            }
            return entity;
        }
    }
}
